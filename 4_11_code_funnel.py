# -*- coding: utf-8 -*-
"""4.11_Code_Funnel.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GzLYTA8zRMN_vClgFspr0cTIJuNLly1I
"""

!pip3 install retentioneering

# Commented out IPython magic to ensure Python compatibility.
from retentioneering import init_config
import pandas as pd
import numpy as np
import io
# %matplotlib inline
from matplotlib import pyplot as plt
import warnings
warnings.filterwarnings('ignore')
import IPython

from google.colab import files
uploaded=files.upload()

data = pd.read_csv(io.StringIO(uploaded['mobile-app-data (600).csv'].decode('utf-8')),sep=',')

data.head()

event_time = "event_timestamp"
event_name = "event_name"
user_id = "user_pseudo_id"


target_events = ["basket_click_checkout"]

init_config(
    experiments_folder='experiments', # folder for saving experiment results: graph visualization, heatmaps and etc.
    index_col='user_pseudo_id', # column by which we split users / sessions / whatever
    event_col='event_name', # column that describes event
    event_time_col='event_timestamp', # column that describes timestamp of event
    positive_target_event='passed', # name of positive target event
    negative_target_event='lost', # name of negative target event
    pos_target_definition={ # how to define positive event, e.g. empty means that add passed for whom was not 'lost'
        'event_list': target_events
    },
    neg_target_definition={}
  )
  data = data.retention.prepare()

print("pos_events:", len(data[data[event_name] == "passed"]))

print("old events:", len(data[data[event_name]=="basket_click_checkout"]))

data.head(15)

data[event_name].drop_duplicates()

IPython.display.HTML(data
.retention
.plot_graph(thresh=0.25,width=800,hight=800))

"""очень большой отток с узла user engagment, 49% уходят. Можно предположить,что это какая-то рекламная ссылка,ссылка с внешнего источника. Если это верно, тогда стоит поднять вопрос нормально ли для нашего приложения,что такой большой отток сразу с этого узла и , главное, как этот отток уменьшить. В узле user engagment есть петля, возможно в промежуточном этапе нужна регистрация, после которой пользователь возвращенется на ту же страницу. С user engagment всего 7.7% уходит в passed. Между  user engagment и screen_view  основной ток пользователей. Это самые большие узлы. В screen_view также есть петля, вероятно от серфа по странице. Если предположить,что это интернет магазин, возможно на этом эране размещен товар/услуги сервиса. С этой страницы в Lost уходит уже не так много пользователей, отностельно user engagment. Следовательно, нужно доводить пользователя до этой страницы,чтобы уменьшить отток. 
Сложно предположить без представления о приложении, но интересно почему user engagment приводит в passed больший процент пользователей,чем session start. Представляется,что на sessioan start  уже был этап регистрации или т.п.,что пользователь более вовлечен/заинтересован. 
Интересно также,что узлы onb не приводят пользователя в passed, а в каких-то случаях даже уводят в lost. Кроме того, сам узел не большой. Сложно предположить без представления о приложении, но, каежтся, onb должен быть основной функцией приложения и такие данные кажутся интересными для рассуждений. 
"""

edgelist = data.retention.get_edgelist(edge_col="user_pseudo_id",edge_attributes="users_nunique", norm=False)
edgelist.sort_values("users_nunique", ascending=False).head(5)

"""Радует,что уход в лост на самый популярный шаг. Как говорилось выше, возможно, screen_view какая-то страница с услугой приложения, что обясняет частый переходы между этоми двумя событиями."""

df=data.retention.get_adjacency(edge_col='user_pseudo_id',edge_attributes='users_nunique',norm=False)
import seaborn as sns
#from IPython.html import widgets
from IPython.display import HTML
def rotateheader():
  return [
         dict(selector="th", props=[("font-size","75%"), ("text-align","right")]),
         dict(selector="th.col.heading",props=[("font-size","75%"), ("text-align","center"), ("transform","translate(0%,-140%) rotate(-15deg)")]),
         dict(selector="caption",props=[("caption-side","bottom")])
        ]
cm=sns.light_palette("green",as_cmap=True)
print("\n\n\n")
df.style.background_gradient(cmap=cm).set_table_styles(rotateheader()).set_caption(" .")

"""Избегая того,что уже было сказано выше, в данной таблице можно выявить несколько новых аспектов: 
из user engagment самый большой переход в app removed(если предположить,что у user engagment вовлекающая в приложение функция это показатель, над которым нужно работать по уменьшению этой цифры)
оснвные взаимодействия со страницами идет через user engagment и screen view, сложно говорить конкретно без представления об функционале приложения
в onb  и категории пользоваетль уходит также с user engagment и screen view в основном. 
"""

loops=data.retention.find_loops()
loops.sort_values(['Lost2Good'],ascending=False).head(15)

"""Интересно,что скрывается за firebase campaig, так как с этой петли пользователи уходят в лост. При этом пользователь  взаимодействиет с этой функцией приложения много раз(около 6 раз каждый пользователь). Возможно пытаясь добиться ожидаемого исхода и не достигает его. Также можно выделить,что по первой нормировке в событии prov_click_banner можно было бы предположить,что с этого события чаще ужодят в Лост, но при использовании второй нормировки видна обратная ситуация."""

sequences=data.retention.find_sequences(ngram_range=(2,6), exclude_cycles=False,exclude_loops=False)
sequences[sequences['Good']!=0].sort_values(['Lost2Good'],ascending=False).head(15)

"""первая последовательность возможно описывет ситуацию,когда пользователь зашел в приложение, ознакомился с ним поверхностно и ушел в Лост. Возможно нужно проработать предложение на этих страницах.
Не совсем понятно почему со второй последовательности пользователь уходит в Лост, кажется, что за этими событиями скрываются просмотры фото..Также можно заметить,что это событие повторяется в других последовательностях.
"""

data.retention.get_clusters(plot_type='cluster_bar',n_clusters=10,refit_cluster=True,ngran_range=(1,1));

"""Интересны кластеры 2,5,8 почему при таком размере кластера такая маленькая конверсия. Для поиска точек роста,вероятно, стоит подробней разобрать пользователей входяших в эти кластеры. Большая конверсия в кластере 9. """

data.retention.project(method='tsne',plot_type='clusters');

data.retention.project(method='tsne',plot_type='targets');

IPython.display.HTML(data
                     .retention
                     .filter_cluster(2)
                     .retention.plot_graph(width=800,height=800))

IPython.display.HTML(data
.retention
.filter_cluster(9)
.retention
.plot_graph(width=800,height=800))

"""выше построены два графика перемещения между кластерами с меньшей и большей конверсией внутри кластера. """

data.retention.filter_cluster(9).retention.get_clusters(plot_type='cluster_heatmap');



"""график выше постороен на сравнении между двумя кластерами с низкой и выской конверсией. наиболее интересна разница  в событии  phs_check_photo  и phs_scroll_album"""

sns.set(style='white', context='notebook', rc={'figure.figsize':(25,5)})
data.retention.cluster_event_dist(8, n=10)

data.retention.get_clusters(n_clusters=6,plot_type='cluster_tsne', refit_cluster=True,ngram_range=(1,2))

data['event_name'].nunique()

edgelist=data.retention.get_edgelist()
edgelist.shape[0]

data.retention.get_clusters(n_clusters=6,plot_type='cluster_tsne', refit_cluster=True,ngram_range=(1,3))